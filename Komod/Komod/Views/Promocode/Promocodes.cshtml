@model PromocodesViewModel
@using Komod.Web.Models.PromocodeModels
@using Komod.Web.Code
@using Komod.Web.Models

@{
    ViewData["Title"] = "Производители";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<div class="container-fluid">
    <div class="fade-in">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header"><h1>Промокоды</h1></div>
                    <div class="card-body">
                        <div class="row mb-2">
                            <div class="col-lg-3">
                                <a id="createPromocodeModal" data-toggle="modal" href="#" data-target="#modal-action-promocode" class="btn btn-pill btn-block btn-primary">
                                    Добавить промокод
                                </a>
                            </div>
                            <div class="col-lg-9">
                                <form asp-controller="Promocode" asp-action="Promocodes" method="get" class="form-inline">
                                    <div class="form-group mb-0 mr-3">
                                        <select name="sortType" id="sortType" class="form-control" data-sortType="@ViewBag.SortType">
                                            <option id="sortType-0" value="0">По дате добавления</option>
                                            <option id="sortType-1" value="1">По дате добавления (в обратном порядке)</option>
                                            <option id="sortType-2" value="2">По дате изменения</option>
                                            <option id="sortType-3" value="3">По дате изменения (в обратном порядке)</option>
                                            <option id="sortType-4" value="4">По названию</option>
                                            <option id="sortType-5" value="5">По названию  (в обратном порядке)</option>
                                        </select>
                                    </div>
                                    <div class="form-group mb-0">
                                        <input type="text" name="searchString" class="form-control mr-3 inputSearch" placeholder="Поиск..." />
                                        <button type="submit" class="btn btn-dark btn-pill btn-sm btnSearch">
                                            <i class="c-icon cil-search"></i>
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                        <table class="table table-responsive-sm table-bordered table-striped table-sm">
                            <thead>
                                <tr>
                                    <th>Название</th>
                                    <th>Дата добавления</th>
                                    <th>Дата изменения</th>
                                    <th>Дата окончания</th>
                                    <th>Действие</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Promocodes)
                                {
                                    @if (item.PromocodeName != "No Promocode")
                                    {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.PromocodeName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.AddedDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ModifiedDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.EndOfPromocode)</td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Small button group">
                                            <a data-toggle="modal" href="#" data-id="@item.Id" data-target="#modal-action-promocode" class="btn btn-dark editPromocodeModal">
                                                <i class="c-icon cil-pencil"></i>
                                            </a>
                                            <a asp-controller="Promocode" asp-action="AddArticleToProduct" asp-route-id="@item.Id" class="btn btn-info">
                                                <i class="c-icon cil-list"></i>
                                            </a>
                                            <a data-toggle="modal" href="#" data-id="@item.Id" data-target="#modal-action-promocode" class="btn btn-danger deletePromocodeModal">
                                                <i class="c-icon cil-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        <nav>
                            <ul class="pagination">
                                @if (Model.PageViewModel.HasPreviousPage)
                                {
                                    <li class="page-item"><a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@(Model.PageViewModel.PageNumber - 1)">Назад</a></li>
                                }
                                @if ((Model.PageViewModel.PageNumber - 2) > 0)
                                {
                                    string fp = "";
                                    @if (Model.PageViewModel.PageNumber - 2 > 1)
                                    {
                                        fp = "...";
                                    }
                                    <li class="page-item"><a class="page-link" asp-controller="Promocode" asp-action="Promocodes">1 @fp</a></li>
                                }


                                @if (Model.PageViewModel.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@(Model.PageViewModel.PageNumber - 1)">
                                            @(Model.PageViewModel.PageNumber - 1)
                                        </a>
                                    </li>
                                }
                                <li class="page-item active">
                                    <a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@Model.PageViewModel.PageNumber">
                                        @Model.PageViewModel.PageNumber
                                    </a>
                                </li>
                                @if (Model.PageViewModel.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@(Model.PageViewModel.PageNumber + 1)">
                                            @(Model.PageViewModel.PageNumber + 1)
                                        </a>
                                    </li>
                                }

                                @if ((Model.PageViewModel.PageNumber + 1) < Model.PageViewModel.TotalPages)
                                {
                                    string fp = "";
                                    @if (Model.PageViewModel.PageNumber + 2 < Model.PageViewModel.TotalPages)
                                    {
                                        fp = "...";
                                    }
                                    <li class="page-item">
                                        <a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@Model.PageViewModel.TotalPages">
                                            @fp @Model.PageViewModel.TotalPages
                                        </a>
                                    </li>
                                }
                                @if (Model.PageViewModel.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-controller="Promocode" asp-action="Promocodes" asp-route-page="@(Model.PageViewModel.PageNumber + 1)">
                                            Вперед
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_Modal", new BootstrapModel { ID = "modal-action-promocode", AreaLabeledId = "modal-action-promocode-label", Size = ModalSize.XLarge })

@section scripts
    {
    <script>
        $('#createPromocodeModal').click(function (e) {
            e.preventDefault();
            $('#modal-content').load('@Url.Action("AddPromocode", "Promocode")');
        });
        $('.addPromocodeToArticle').click(function (e) {
            e.preventDefault();
            var promocodeId = $(this).attr("data-id");
            name = encodeURIComponent(promocodeId);
            $('#modal-content').load('@Url.Action("AddPromocodeToProduct", "Promocode")?id=' + promocodeId);
        });
        $('.editPromocodeModal').click(function (e) {
            e.preventDefault();
            var promocodeId = $(this).attr("data-id");
            name = encodeURIComponent(promocodeId);
            $('#modal-content').load('@Url.Action("EditPromocode", "Promocode")?id=' + promocodeId);
        });
        $('.deletePromocodeModal').click(function (e) {
            e.preventDefault();
            var promocodeId = $(this).attr("data-id");
            name = encodeURIComponent(promocodeId);
            $('#modal-content').load('@Url.Action("DeletePromocode", "Promocode")?id=' + promocodeId);
        });

        var sortType = $('#sortType').attr("data-sortType");

        switch (sortType) {
            case "0":
                $('#sortType-0').attr("selected", "selected");
                break;
            case "1":
                $('#sortType-1').attr("selected", "selected");
                break;
            case "2":
                $('#sortType-2').attr("selected", "selected");
                break;
            case "3":
                $('#sortType-3').attr("selected", "selected");
                break;
            case "4":
                $('#sortType-4').attr("selected", "selected");
                break;
            case "5":
                $('#sortType-5').attr("selected", "selected");
                break;
        }


        //Добавление товаров к промокоду
        var allCategoriesChecked = $('#allCategoriesChecked');
        var categoryCheckboxes = $('.category-checkbox');
        var showProducts = $('#showProducts');
        var allProductsFromServer = [];
        var allArticlesFromServer = [];

        function checkAllCategorises() {
            $('.category-checkbox').prop('checked', true);
        }
        function uncheckAllCategorises() {
            $('.category-checkbox').prop('checked', false);
        }

        function getProducts() {
            var categoryIds = [];
            $('.category-checkbox').each(function () {
                if ($(this).prop('checked')) {
                    categoryIds.push(parseInt($(this).val(), 10));
                }
            });
            var url = `/Promocode/GetProductList`
            $.ajax({
                type: "GET",
                url: url,
                traditional: true,
                data: { 'categoryIds': categoryIds },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    allProductsFromServer = data;
                    console.log(allProductsFromServer);
                    generateProductList();
                },
                failure: function (data) {
                    console.log(data.responseText);
                },
                error: function (data) {
                    console.log(data.responseText);
                }
            });
        }

        function generateProductList() {
            var productCheckboxesTitle = `
                <div class="col-2">
                    <h3 style="margin-bottom: 0"><strong>Товары</strong></h3>
                </div>
                <div class="col-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="allProductsChecked">
                        <label class="form-check-label" for="allProductsChecked">
                            Выбрать все товары
                        </label>
                    </div>
                </div>
                <div class="col-7"><span>Если не отмечено ни одного товара, то будут выбраны все. </span></div>
            `;
            var productCheckboxes = "";

            for (var i = 0; i < allProductsFromServer.length; i++) {
                productCheckboxes += `
                    <div class="col-2">
                        <div class="form-check">
                            <input class="form-check-input product-checkbox" type="checkbox" id="${allProductsFromServer[i].Id}" name="products" value="${allProductsFromServer[i].Id}">
                            <label class="form-check-label" for="${allProductsFromServer[i].Id}">
                                ${allProductsFromServer[i].ProductName}
                            </label>
                        </div>
                    </div>
                `;
            }

            var productShowArticleBtn = `
                <div class="col-12">
                    <a href="#" class="btn btn-primary" id="showArticles">Показать все артикулы выбранных товаров</a>
                </div>
            `;

            $('#productListTitle').html(productCheckboxesTitle);
            $('#productList').html(productCheckboxes);
            $('#productShowArticleBtn').html(productShowArticleBtn);
        }

        function getArticles() {
            var productIds = [];
            $('.product-checkbox').each(function () {
                if ($(this).prop('checked')) {
                    productIds.push(parseInt($(this).val(), 10));
                }
            });
            var url = `/Promocode/GetArticleList`
            $.ajax({
                type: "GET",
                url: url,
                traditional: true,
                data: { 'productIds': productIds },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    allArticlesFromServer = data;
                    console.log(allArticlesFromServer);
                    generateArticleList();
                },
                failure: function (data) {
                    console.log(data.responseText);
                },
                error: function (data) {
                    console.log(data.responseText);
                }
            });
        }

        function generateArticleList() {
            var articleCheckboxesTitle = `
                <div class="col-2">
                    <h3 style="margin-bottom: 0"><strong>Артикулы</strong></h3>
                </div>
                <div class="col-3">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="allArticlesChecked">
                        <label class="form-check-label" for="allArticlesChecked">
                            Выбрать все артикулы
                        </label>
                    </div>
                </div>
                <div class="col-7"><span>Если не отмечено ни одного артикула, то будут выбраны все. </span></div>
            `;
            var articleCheckboxes = "";

            for (var i = 0; i < allArticlesFromServer.length; i++) {
                articleCheckboxes += `
                    <div class="col-2">
                        <div class="form-check">
                            <input class="form-check-input product-checkbox" type="checkbox" id="${allArticlesFromServer[i].Id}" name="articles" value="${allArticlesFromServer[i].Id}">
                            <label class="form-check-label" for="${allArticlesFromServer[i].Id}">
                                ${allArticlesFromServer[i].ArticleName}
                            </label>
                        </div>
                    </div>
                `;
            }

            $('#articleListTitle').html(articleCheckboxesTitle);
            $('#articleList').html(articleCheckboxes);
        }

        $(document).on('change', '#allCategoriesChecked', function () {
            if ($(this).prop('checked')) {
                checkAllCategorises();
            }
            else {
                uncheckAllCategorises();
            }
        });

        $(document).on('change', '.category-checkbox', function () {
            if (!$(this).prop('checked')) {
                $('#allCategoriesChecked').prop('checked', false);
            }
        });

        $(document).on('click', '#showProducts', function (e) {
            e.preventDefault();
            getProducts();
        });

        $(document).on('click', '#showArticles', function (e) {
            e.preventDefault();
            getArticles();
        });

        /* $('.promocode-checkbox').on('click', function () {
            console.log($(this));
            var $this = $(this),
                checked = $this.prop("checked"),
                container = $this.parent(),
                siblings = container.siblings();

            container.find('input[type="checkbox"]')
                .prop({
                    indeterminate: false,
                    checked: checked
                })
                .siblings('label')
                .removeClass('custom-checked custom-unchecked custom-indeterminate')
                .addClass(checked ? 'custom-checked' : 'custom-unchecked');

            checkSiblings(container, checked);
        });

        function checkboxChanged() {
            var $this = $(this),
                checked = $this.prop("checked"),
                container = $this.parent(),
                siblings = container.siblings();

            container.find('input[type="checkbox"]')
                .prop({
                    indeterminate: false,
                    checked: checked
                })
                .siblings('label')
                .removeClass('custom-checked custom-unchecked custom-indeterminate')
                .addClass(checked ? 'custom-checked' : 'custom-unchecked');

            checkSiblings(container, checked);
        }

        function checkSiblings($el, checked) {
            var parent = $el.parent().parent(),
                all = true,
                indeterminate = false;

            $el.siblings().each(function () {
                return all = ($(this).children('input[type="checkbox"]').prop("checked") === checked);
            });

            if (all && checked) {
                parent.children('input[type="checkbox"]')
                    .prop({
                        indeterminate: false,
                        checked: checked
                    })
                    .siblings('label')
                    .removeClass('custom-checked custom-unchecked custom-indeterminate')
                    .addClass(checked ? 'custom-checked' : 'custom-unchecked');

                checkSiblings(parent, checked);
            }
            else if (all && !checked) {
                indeterminate = parent.find('input[type="checkbox"]:checked').length > 0;

                parent.children('input[type="checkbox"]')
                    .prop("checked", checked)
                    .prop("indeterminate", indeterminate)
                    .siblings('label')
                    .removeClass('custom-checked custom-unchecked custom-indeterminate')
                    .addClass(indeterminate ? 'custom-indeterminate' : (checked ? 'custom-checked' : 'custom-unchecked'));

                checkSiblings(parent, checked);
            }
            else {
                $el.parents("li").children('input[type="checkbox"]')
                    .prop({
                        indeterminate: true,
                        checked: false
                    })
                    .siblings('label')
                    .removeClass('custom-checked custom-unchecked custom-indeterminate')
                    .addClass('custom-indeterminate');
            }
        } */

    </script>
}

